// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RazzleServer.Common.Data;
using System;

namespace RazzleServer.Migrations
{
    [DbContext(typeof(MapleDbContext))]
    partial class MapleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("RazzleServer.DB.Models.AccountEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<DateTime>("Creation");

                    b.Property<byte>("Gender");

                    b.Property<bool>("IsBanned");

                    b.Property<bool>("IsMaster");

                    b.Property<int>("MaxCharacters");

                    b.Property<string>("Password");

                    b.Property<string>("Pin");

                    b.Property<string>("Salt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.BuddyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<int>("BuddyAccountId");

                    b.Property<int>("BuddyCharacterId");

                    b.Property<int>("CharacterId");

                    b.Property<bool>("IsRequest");

                    b.HasKey("Id");

                    b.ToTable("Buddies");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.CharacterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("AbilityPoints");

                    b.Property<int>("AccountId");

                    b.Property<int>("BuddyListSlots");

                    b.Property<byte>("CashSlots");

                    b.Property<short>("Dexterity");

                    b.Property<byte>("EquipmentSlots");

                    b.Property<byte>("EtceteraSlots");

                    b.Property<int>("Experience");

                    b.Property<int>("Face");

                    b.Property<short>("Fame");

                    b.Property<byte>("Gender");

                    b.Property<int>("GuildContribution");

                    b.Property<int>("GuildId");

                    b.Property<int?>("GuildRank");

                    b.Property<int>("Hair");

                    b.Property<short>("Health");

                    b.Property<short>("Intelligence");

                    b.Property<short>("Job");

                    b.Property<int>("JobRank");

                    b.Property<int>("JobRankMove");

                    b.Property<byte>("Level");

                    b.Property<short>("Luck");

                    b.Property<short>("Mana");

                    b.Property<int>("MapId");

                    b.Property<short>("MaxHealth");

                    b.Property<short>("MaxMana");

                    b.Property<int>("Meso");

                    b.Property<string>("Name");

                    b.Property<int>("Rank");

                    b.Property<int>("RankMove");

                    b.Property<byte>("SetupSlots");

                    b.Property<short>("SkillPoints");

                    b.Property<byte>("Skin");

                    b.Property<byte>("SpawnPoint");

                    b.Property<short>("Strength");

                    b.Property<byte>("UsableSlots");

                    b.Property<byte>("WorldId");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.CharacterStorageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<int>("Meso");

                    b.Property<byte>("Slots");

                    b.HasKey("Id");

                    b.ToTable("CharacterStorages");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.GuildEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<int>("GP");

                    b.Property<int>("Leader");

                    b.Property<int>("Logo");

                    b.Property<int>("LogoBG");

                    b.Property<short>("LogoBGColor");

                    b.Property<short>("LogoColor");

                    b.Property<string>("Name")
                        .HasMaxLength(45);

                    b.Property<string>("Notice")
                        .HasMaxLength(101);

                    b.Property<string>("Rank1Title")
                        .HasMaxLength(45);

                    b.Property<string>("Rank2Title")
                        .HasMaxLength(45);

                    b.Property<string>("Rank3Title")
                        .HasMaxLength(45);

                    b.Property<string>("Rank4Title")
                        .HasMaxLength(45);

                    b.Property<string>("Rank5Title")
                        .HasMaxLength(45);

                    b.Property<int>("Signature");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.ItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<short>("Accuracy");

                    b.Property<short>("Agility");

                    b.Property<short>("Avoidability");

                    b.Property<short>("BonusPotential1");

                    b.Property<short>("BonusPotential2");

                    b.Property<int>("CharacterId");

                    b.Property<string>("Creator")
                        .HasMaxLength(13);

                    b.Property<short>("CustomExp");

                    b.Property<byte>("CustomLevel");

                    b.Property<short>("Dexterity");

                    b.Property<int>("Durability");

                    b.Property<byte>("Enhancements");

                    b.Property<DateTime>("Expiration");

                    b.Property<short>("Flags");

                    b.Property<short>("Health");

                    b.Property<short>("Intelligence");

                    b.Property<bool>("IsStored");

                    b.Property<short>("Jump");

                    b.Property<short>("Luck");

                    b.Property<short>("MagicAttack");

                    b.Property<short>("MagicDefense");

                    b.Property<short>("Mana");

                    b.Property<int>("MapleId");

                    b.Property<int?>("PetId");

                    b.Property<short>("Position");

                    b.Property<short>("Potential1");

                    b.Property<short>("Potential2");

                    b.Property<short>("Potential3");

                    b.Property<byte>("PotentialState");

                    b.Property<short>("Quantity");

                    b.Property<byte>("Slot");

                    b.Property<string>("Source");

                    b.Property<short>("Speed");

                    b.Property<short>("Strength");

                    b.Property<byte>("UpgradesApplied");

                    b.Property<byte>("UpgradesAvailable");

                    b.Property<short>("WeaponAttack");

                    b.Property<short>("WeaponDefense");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.KeyMapEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Action");

                    b.Property<int>("CharacterId");

                    b.Property<byte>("Key");

                    b.Property<byte>("Type");

                    b.HasKey("Id");

                    b.ToTable("KeyMaps");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.MemoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Message");

                    b.Property<DateTime>("Received");

                    b.Property<string>("Sender");

                    b.HasKey("Id");

                    b.ToTable("MemoEntities");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.QuestCustomDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("QuestCustomData");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.QuestMobStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<int>("Mob");

                    b.Property<int>("QuestStatusId");

                    b.HasKey("Id");

                    b.ToTable("QuestStatusMobs");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.QuestStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<uint>("CompleteTime");

                    b.Property<string>("CustomData")
                        .HasMaxLength(255);

                    b.Property<int>("QuestId");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("QuestStatus");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.QuickSlotKeyMapEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<byte>("Index");

                    b.Property<int>("Key");

                    b.HasKey("Id");

                    b.ToTable("QuickSlotKeyMaps");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.SkillCooldownEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<int>("Length");

                    b.Property<int>("SkillId");

                    b.Property<long>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("SkillCooldowns");
                });

            modelBuilder.Entity("RazzleServer.DB.Models.SkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<long>("Expiration");

                    b.Property<byte>("Level");

                    b.Property<byte>("MasterLevel");

                    b.Property<short>("SkillExp");

                    b.Property<int>("SkillId");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
